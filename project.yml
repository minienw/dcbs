# Defines the Xcode Project, which can be generated by running `make dev`
# Specification: https://github.com/yonaskolb/XcodeGen/blob/master/Docs/ProjectSpec.md

name: CTR

# - Packages:

packages:
  CocoaLumberjack:
    github: CocoaLumberjack/CocoaLumberjack
    majorVersion: 3.7.2
  MBProgressHUD:
    github: jdg/MBProgressHUD
    majorVersion: 1.2.0
  Lottie:
    github: airbnb/lottie-ios
    majorVersion: 3.2.1
  Nimble:
    github: Quick/Nimble
    majorVersion: 9.0.0
  SnapshotTesting:
    github: pointfreeco/swift-snapshot-testing
    majorVersion: 1.8.2
  SnapKit:
    github: SnapKit/SnapKit
    majorVersion: 5.0.1


# - Configurations:

configs:
  Development: debug
  Acceptance: acc
  AppStore: release
  AppStore Acc: acc
  Enterprise: release

# - Project Level settings:

settings:
  base:
    IPHONEOS_DEPLOYMENT_TARGET: 12.3
    SWIFT_VERSION: 5.0
    VERSIONING_SYSTEM: apple-generic
    CLANG_ANALYZER_LOCALIZABILITY_NONLOCALIZED: YES
    FRAMEWORK_SEARCH_PATHS:
      - "$(inherited)"
      - "$(PROJECT_DIR)"
    LD_RUNPATH_SEARCH_PATHS:
      - "$(inherited)"
      - "@executable_path/Frameworks"
  configs:
    Development:
      LOG_LEVEL: debug
    Acceptance:
      LOG_LEVEL: debug
    AppStore:
      LOG_LEVEL: none
    AppStore Acc:
      LOG_LEVEL: error
    Enterprise:
      LOG_LEVEL: none

# - Target Templates (i.e. shared default settings for targets):

targetTemplates:
  Standard_iOS:
    platform: iOS
    type: application
    dependencies:
      - framework: openssl.framework
        embed: false
      - package: CocoaLumberjack
        product: CocoaLumberjack
      - package: CocoaLumberjack
        product: CocoaLumberjackSwift
      - package: MBProgressHUD
      - package: Lottie
      - package: SnapKit
      - framework: clcore.framework
        embed: false
    settings:
      base:
        MARKETING_VERSION: 1.0.0
        CURRENT_PROJECT_VERSION: 20
        ASSETCATALOG_COMPILER_GLOBAL_ACCENT_COLOR_NAME: AccentColor
        SWIFT_OBJC_BRIDGING_HEADER: Sources/CTR/Infrastructure/Services/Crypto/Utility/CTR-Bridging-Header.h
        TARGETED_DEVICE_FAMILY: 1
        PRODUCT_NAME: $(TARGET_NAME)
        VALIDATE_PRODUCT: YES
        DEBUG_INFORMATION_FORMAT: dwarf-with-dsym # Firebase warns that this must be set for all targets.
        CODE_SIGN_STYLE: Manual
        CODE_SIGN_IDENTITY: iPhone Distribution
      configs:
        Development:
          PRODUCT_MODULE_NAME: CTR
          NETWORK_CONFIGURATION: Development
          CODE_SIGN_IDENTITY: iPhone Developer
          VALIDATE_PRODUCT: NO
          DEVELOPMENT_TEAM: C2H38GV99H
        Acceptance:
          PRODUCT_MODULE_NAME: CTR
          NETWORK_CONFIGURATION: ACC
          CODE_SIGN_IDENTITY: iPhone Developer
          VALIDATE_PRODUCT: NO
          DEVELOPMENT_TEAM: C2H38GV99H
        AppStore:
          NETWORK_CONFIGURATION: Production
          DEVELOPMENT_TEAM: C2H38GV99H
        Enterprise:
          NETWORK_CONFIGURATION: Production
          DEVELOPMENT_TEAM: 4936NV9Q2W
        AppStore Acc:
          NETWORK_CONFIGURATION: ACC
          DEVELOPMENT_TEAM: C2H38GV99H
    info:
      properties:
        # Dynamic properties (APP_FLAVOR etc) here are set at build time, so can still vary based on a Configuration.
        NETWORK_CONFIGURATION: $(NETWORK_CONFIGURATION)
        APP_FLAVOR: ${APP_FLAVOR}
        CFBundleDevelopmentRegion: nl_NL
        CFBundleExecutable: $(EXECUTABLE_NAME)
        CFBundleName: ${DISPLAY_NAME}
        CFBundlePackageType: $(PRODUCT_BUNDLE_PACKAGE_TYPE)
        CFBundleShortVersionString: $(MARKETING_VERSION)
        CFBundleVersion: $(CURRENT_PROJECT_VERSION)
        ITSAppUsesNonExemptEncryption: false
        LSApplicationQueriesSchemes:
          - 'tel'
          - 'cydia'
          - 'sileo'
          - 'undecimus'
          - 'zbra'
        LSRequiresIPhoneOS: true
        NSCameraUsageDescription: "De app will toegang tot de camera om de QR-code te scannen. "
        UIAppFonts:
          - 'Montserrat-Bold.ttf'
          - 'Montserrat-SemiBold.ttf'
        UIApplicationSceneManifest:
          UIApplicationSupportsMultipleScenes: false
          UISceneConfigurations:
            UIWindowSceneSessionRoleApplication:
              - UISceneConfigurationName: Default Configuration
                UISceneDelegateClassName: $(PRODUCT_MODULE_NAME).SceneDelegate
        UIApplicationSupportsIndirectInputEvents: true
        UIRequiredDeviceCapabilities:
          - armv7
        UIStatusBarStyle: UIStatusBarStyleDarkContent
        UISupportedInterfaceOrientations:
          - UIInterfaceOrientationPortrait
        UISupportedInterfaceOrientations~ipad:
          - UIInterfaceOrientationPortrait
        UIUserInterfaceStyle: Light
        UIViewControllerBasedStatusBarAppearance: true
    preBuildScripts:
      - name: Run SwiftLint
        basedOnDependencyAnalysis: true
        script: |
          if which Vendor/SwiftLint/.build/release/swiftlint >/dev/null; then
            Vendor/SwiftLint/.build/release/swiftlint --quiet --config=./.swiftlint.yml
          else
            echo "warning: SwiftLint not found, run 'make dev' in the project root folder"
          fi

  Standard_UnitTesting:
    platform: iOS
    type: bundle.unit-test
    dependencies:
      - package: Nimble
      - package: SnapshotTesting
      - framework: Vendor/ViewControllerPresentationSpy.framework
        embed: true
    settings:
      TEST_HOST: "$(BUILT_PRODUCTS_DIR)/CTR.app/CTR"

# - Targets

targets:
  Verifier:
    templates:
      - Standard_iOS
    sources:
      - path: Sources
        excludes:
          - "CTR/Configuration/Firebase"
          - "CTR/Interface/Holder/Launch"
          - "CTR/Infrastructure/Resources/Localization/Holder/*.lproj"
          - "CTR/Configuration/holder-Info.plist"
    settings:
      base:
        APP_FLAVOR: verifier
        ASSETCATALOG_COMPILER_APPICON_NAME: AppIconVerifier
        INFOPLIST_FILE: Sources/CTR/Configuration/verifier-Info.plist
      configs:
        Development:
          DISPLAY_NAME: "ðŸ¤– DCC Scanner"
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.dcbs.dccscanner.dev
          PROVISIONING_PROFILE_SPECIFIER: DCC Scanner App Dev
        Acceptance:
          DISPLAY_NAME: DCC Scanner
          PROVISIONING_PROFILE_SPECIFIER: DCC Scanner App Dev
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.dcbs.dccscanner.dev
        AppStore:
          DISPLAY_NAME: DCC Scanner
          PROVISIONING_PROFILE_SPECIFIER: DCC Scanner App
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.dcbs.dccscanner
        AppStore Acc:
          DISPLAY_NAME: DCC Scanner
          PROVISIONING_PROFILE_SPECIFIER: DCC Scanner App
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.dcbs.dccscanner
        Enterprise:
          DISPLAY_NAME: DCC Scanner
          PROVISIONING_PROFILE_SPECIFIER: DCC Scanner In House
          PRODUCT_BUNDLE_IDENTIFIER: nl.rijksoverheid.dcbs.dccscanner.enterprise
    info:
      path: Sources/CTR/Configuration/verifier-Info.plist
      properties:
        UILaunchStoryboardName: LaunchScreenVerifier

  CTRTests:
    templates:
      - Standard_UnitTesting
    sources:
      - path: CTRTests
        excludes:
          - "**/__Snapshots__"

# - Scheme Templates

schemeTemplates:

  # Template for Development/Test/Acc/Production/AppStore varieties
  ConfigScheme:
    build:
      config: ${configEnvironment} #not sure if needed.
      targets:
        ${appTargetName}: all
    test:
      config: ${configEnvironment}
    run:
      config: ${configEnvironment}
    profile:
      config: ${configEnvironment}
    analyze:
      config: ${configEnvironment}
    archive:
      config: ${configEnvironment}

  # Variant of the standard `ConfigScheme` for Development
  DevelopmentConfigScheme:
    templates:
      - ConfigScheme
    run:
      commandLineArguments:
        # Enable CoreData debug flags:
        # See: https://www.donnywals.com/using-launch-arguments-for-easier-core-data-debugging/
       # "-com.apple.CoreData.SQLDebug 2": YES # choose a level from 1-4
        "-com.apple.CoreData.ConcurrencyDebug 1": YES # crash with stacktrace on concurrency mistakes

  # Template for adding unit tests to a scheme:
  TestScheme:
    test:
      commandLineArguments:
        "--unittesting": true
      language: nl
      region: NL
      gatherCoverageData: true
      coverageTargets:
        - ${appTargetName}
      targets:
        - name: ${testTargetName}
          parallelizable: false
          randomExecutionOrder: false

# - Schemes

schemes:

  DCC Scanner Dev:
    templates:
      - DevelopmentConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: Development
    run:
      language: nl

  DCC Scanner Acc:
    templates:
      - DevelopmentConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: Acceptance
    run:
      language: nl

  DCC Scanner AppStore:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: AppStore

  DCC Scanner Enterprise:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: Enterprise

  DCC Scanner AppStore Acc:
    templates:
      - ConfigScheme
    templateAttributes:
      appTargetName: Verifier
      configEnvironment: AppStore Acc